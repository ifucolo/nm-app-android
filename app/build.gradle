apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

ext {
    okhttp_version = '3.10.0'
    koin_version = '1.0.2'
    retrofit_version = '2.3.0'
    steho_version = '1.5.0'
    calligraphy_version = '2.3.0'
    paper_version = '2.6'
    play_services_version = '16.0.0'
    rx_android_version = '2.0.2'
    rx_java_version = '2.1.14'
    rx_kotlin_version = '2.2.0'
    rx_location = '2.1@aar'
    android_arch_version = '1.1.1'
    mockito_version = '2.21.0'
    mockito_kotlin = '2.0.0-RC1'
    constraint_version = '1.1.3'
    espresse_version = '3.0.2'
    runner_version = '1.0.2'
    annotation_version = '1.0'
    junit_version = '4.12'
    support_library_version = '28.0.0'
    permissionsdispatcher_version = '3.3.1'
}

buildscript {
    repositories {
        jcenter()
        maven { url 'http://oss.jfrog.org/artifactory/oss-snapshot-local/' }
    }
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "example.com.nm"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        resValue "string", "google_maps_key",
                (project.findProperty("GOOGLE_MAPS_API_KEY") ?: "")
    }

    buildTypes {
        release {
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true

            debuggable false
            jniDebuggable false

            FileCollection proGuardFileCollection = files { file('./proguard/').listFiles() }
            proGuardFileCollection.each {
                println "Proguard file located and processed: " + it

                proguardFiles it
            }

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    signingConfigs {
        holonis {
            keyAlias 'nmapp'
            keyPassword 'nmapp123456'
            storePassword 'nmapp123456'
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            unitTests.returnDefaultValues = true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation "junit:junit:$junit_version"

    androidTestImplementation "com.android.support.test:runner:$runner_version"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espresse_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation "com.android.support:appcompat-v7:$support_library_version"
    implementation "com.android.support:support-v4:$support_library_version"
    implementation "com.android.support:support-media-compat:$support_library_version"
    implementation "com.android.support:design:$support_library_version"

    implementation "com.android.support.constraint:constraint-layout:$constraint_version"

    //Mockito
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockito_kotlin"

    // ViewModel and LiveData
    implementation "android.arch.lifecycle:extensions:$android_arch_version"
    testImplementation "android.arch.core:core-testing:$android_arch_version"
    annotationProcessor "android.arch.lifecycle:compiler:$android_arch_version"

    // Koin
    implementation "org.koin:koin-android-viewmodel:$koin_version"
    implementation "org.koin:koin-core:$koin_version"
    testImplementation "org.koin:koin-test:$koin_version"

    //Retro fit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttp_version"

    // Steho
    implementation "com.facebook.stetho:stetho:$steho_version"
    implementation "com.facebook.stetho:stetho-okhttp3:$steho_version"

    // Rx
    implementation "io.reactivex.rxjava2:rxandroid:$rx_android_version"
    implementation "io.reactivex.rxjava2:rxjava:$rx_java_version"
    implementation "io.reactivex.rxjava2:rxkotlin:$rx_kotlin_version"

    // Calligraphy
    implementation "uk.co.chrisjenx:calligraphy:$calligraphy_version"

    // Paper
    implementation "io.paperdb:paperdb:$paper_version"

    // Google Play
    implementation "com.google.android.gms:play-services-maps:$play_services_version"
    implementation "com.google.android.gms:play-services-location:$play_services_version"
    implementation "com.google.android.gms:play-services-places:$play_services_version"


    implementation 'pl.charmas.android:android-reactive-location2:2.1@aar'

    implementation("com.github.hotchemi:permissionsdispatcher:$permissionsdispatcher_version") {
        exclude module: "support-v13"
    }
    kapt "com.github.hotchemi:permissionsdispatcher-processor:$permissionsdispatcher_version"

}
